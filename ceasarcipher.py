# -*- coding: utf-8 -*-
"""ceasar cipher.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lS3T4ubhUBXYmhKqDnAI8TiH9n24LMaL
"""



def caesar_cipher(message, shift, mode):
    result = ""

    # Loop through each character in the message
    for char in message:
        if char.isalpha():  # Check if the character is an alphabet letter
            shift_amount = shift if mode == 'encrypt' else -shift
            char_code = ord(char) + shift_amount

            # Handle uppercase letters
            if char.isupper():
                if char_code > ord('Z'):
                    char_code -= 26
                elif char_code < ord('A'):
                    char_code += 26

            # Handle lowercase letters
            elif char.islower():
                if char_code > ord('z'):
                    char_code -= 26
                elif char_code < ord('a'):
                    char_code += 26

            result += chr(char_code)
        else:
            result += char  # Keep the character as it is (e.g., space, punctuation)

    return result

# User input for mode, message, and shift
mode = input("Do you want to 'encrypt' or 'decrypt' the message? ").strip().lower()
message = input("Enter the message: ")
shift = int(input("Enter the shift value: "))

# Call the Caesar cipher function
output = caesar_cipher(message, shift, mode)

# Display the result
print(f"The {mode}ed message is: {output}")